// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: query.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LukeKennedy.LSQL.Net {

  /// <summary>Holder for reflection information generated from query.proto</summary>
  public static partial class QueryReflection {

    #region Descriptor
    /// <summary>File descriptor for query.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QueryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtxdWVyeS5wcm90bxoLd2hlcmUucHJvdG8aDHNlbGVjdC5wcm90byJ+CgVR",
            "dWVyeRIKCgJpZBgBIAEoCRIXCgZzZWxlY3QYAiABKAsyBy5TZWxlY3QSEAoG",
            "ZG9tYWluGGUgASgJSAASFwoGcGFnaW5nGAMgASgLMgcuUGFnaW5nEhUKBXdo",
            "ZXJlGAQgASgLMgYuR3JvdXBCDgoMZG9tYWluX3NwYWNlIicKBlBhZ2luZxIN",
            "CgVsaW1pdBgBIAEoBBIOCgZvZmZzZXQYAiABKAQiDQoLRG9tYWluSm9pbnNC",
            "OVogZ2l0aHViLmNvbS9sbGtlbm5lZHkvbHNxbC9nb2xzcWyqAhRMdWtlS2Vu",
            "bmVkeS5MU1FMLk5ldGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LukeKennedy.LSQL.Net.WhereReflection.Descriptor, global::LukeKennedy.LSQL.Net.SelectReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LukeKennedy.LSQL.Net.Query), global::LukeKennedy.LSQL.Net.Query.Parser, new[]{ "Id", "Select", "Domain", "Paging", "Where" }, new[]{ "DomainSpace" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LukeKennedy.LSQL.Net.Paging), global::LukeKennedy.LSQL.Net.Paging.Parser, new[]{ "Limit", "Offset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LukeKennedy.LSQL.Net.DomainJoins), global::LukeKennedy.LSQL.Net.DomainJoins.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Query : pb::IMessage<Query>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LukeKennedy.LSQL.Net.QueryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query(Query other) : this() {
      id_ = other.id_;
      select_ = other.select_ != null ? other.select_.Clone() : null;
      paging_ = other.paging_ != null ? other.paging_.Clone() : null;
      where_ = other.where_ != null ? other.where_.Clone() : null;
      switch (other.DomainSpaceCase) {
        case DomainSpaceOneofCase.Domain:
          Domain = other.Domain;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query Clone() {
      return new Query(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// A UUID generated for this query for idempotence and caching reasons, must be non-empty. 
    /// Repeated values may have their contents ignored by the server if it chooses to return cached content. 
    /// Servers must still correctly obey authC and authZ logic when choosing to return cached content based on ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "select" field.</summary>
    public const int SelectFieldNumber = 2;
    private global::LukeKennedy.LSQL.Net.Select select_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LukeKennedy.LSQL.Net.Select Select {
      get { return select_; }
      set {
        select_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 101;
    /// <summary>
    /// DomainJoins domains = 102; // TODO
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domainSpaceCase_ == DomainSpaceOneofCase.Domain ? (string) domainSpace_ : ""; }
      set {
        domainSpace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        domainSpaceCase_ = DomainSpaceOneofCase.Domain;
      }
    }

    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 3;
    private global::LukeKennedy.LSQL.Net.Paging paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LukeKennedy.LSQL.Net.Paging Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "where" field.</summary>
    public const int WhereFieldNumber = 4;
    private global::LukeKennedy.LSQL.Net.Group where_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LukeKennedy.LSQL.Net.Group Where {
      get { return where_; }
      set {
        where_ = value;
      }
    }

    private object domainSpace_;
    /// <summary>Enum of possible cases for the "domain_space" oneof.</summary>
    public enum DomainSpaceOneofCase {
      None = 0,
      Domain = 101,
    }
    private DomainSpaceOneofCase domainSpaceCase_ = DomainSpaceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainSpaceOneofCase DomainSpaceCase {
      get { return domainSpaceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDomainSpace() {
      domainSpaceCase_ = DomainSpaceOneofCase.None;
      domainSpace_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Select, other.Select)) return false;
      if (Domain != other.Domain) return false;
      if (!object.Equals(Paging, other.Paging)) return false;
      if (!object.Equals(Where, other.Where)) return false;
      if (DomainSpaceCase != other.DomainSpaceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (select_ != null) hash ^= Select.GetHashCode();
      if (domainSpaceCase_ == DomainSpaceOneofCase.Domain) hash ^= Domain.GetHashCode();
      if (paging_ != null) hash ^= Paging.GetHashCode();
      if (where_ != null) hash ^= Where.GetHashCode();
      hash ^= (int) domainSpaceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (select_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Select);
      }
      if (paging_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Paging);
      }
      if (where_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Where);
      }
      if (domainSpaceCase_ == DomainSpaceOneofCase.Domain) {
        output.WriteRawTag(170, 6);
        output.WriteString(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (select_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Select);
      }
      if (paging_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Paging);
      }
      if (where_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Where);
      }
      if (domainSpaceCase_ == DomainSpaceOneofCase.Domain) {
        output.WriteRawTag(170, 6);
        output.WriteString(Domain);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (select_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Select);
      }
      if (domainSpaceCase_ == DomainSpaceOneofCase.Domain) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (paging_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paging);
      }
      if (where_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Where);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.select_ != null) {
        if (select_ == null) {
          Select = new global::LukeKennedy.LSQL.Net.Select();
        }
        Select.MergeFrom(other.Select);
      }
      if (other.paging_ != null) {
        if (paging_ == null) {
          Paging = new global::LukeKennedy.LSQL.Net.Paging();
        }
        Paging.MergeFrom(other.Paging);
      }
      if (other.where_ != null) {
        if (where_ == null) {
          Where = new global::LukeKennedy.LSQL.Net.Group();
        }
        Where.MergeFrom(other.Where);
      }
      switch (other.DomainSpaceCase) {
        case DomainSpaceOneofCase.Domain:
          Domain = other.Domain;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (select_ == null) {
              Select = new global::LukeKennedy.LSQL.Net.Select();
            }
            input.ReadMessage(Select);
            break;
          }
          case 26: {
            if (paging_ == null) {
              Paging = new global::LukeKennedy.LSQL.Net.Paging();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 34: {
            if (where_ == null) {
              Where = new global::LukeKennedy.LSQL.Net.Group();
            }
            input.ReadMessage(Where);
            break;
          }
          case 810: {
            Domain = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (select_ == null) {
              Select = new global::LukeKennedy.LSQL.Net.Select();
            }
            input.ReadMessage(Select);
            break;
          }
          case 26: {
            if (paging_ == null) {
              Paging = new global::LukeKennedy.LSQL.Net.Paging();
            }
            input.ReadMessage(Paging);
            break;
          }
          case 34: {
            if (where_ == null) {
              Where = new global::LukeKennedy.LSQL.Net.Group();
            }
            input.ReadMessage(Where);
            break;
          }
          case 810: {
            Domain = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Paging : pb::IMessage<Paging>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Paging> _parser = new pb::MessageParser<Paging>(() => new Paging());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Paging> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LukeKennedy.LSQL.Net.QueryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Paging() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Paging(Paging other) : this() {
      limit_ = other.limit_;
      offset_ = other.offset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Paging Clone() {
      return new Paging(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private ulong limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private ulong offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Paging);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Paging other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (Offset != other.Offset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Limit != 0UL) hash ^= Limit.GetHashCode();
      if (Offset != 0UL) hash ^= Offset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Limit != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Limit);
      }
      if (Offset != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Limit != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Limit);
      }
      if (Offset != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Offset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Limit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (Offset != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Offset);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Paging other) {
      if (other == null) {
        return;
      }
      if (other.Limit != 0UL) {
        Limit = other.Limit;
      }
      if (other.Offset != 0UL) {
        Offset = other.Offset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadUInt64();
            break;
          }
          case 16: {
            Offset = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadUInt64();
            break;
          }
          case 16: {
            Offset = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TODO
  /// </summary>
  public sealed partial class DomainJoins : pb::IMessage<DomainJoins>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DomainJoins> _parser = new pb::MessageParser<DomainJoins>(() => new DomainJoins());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DomainJoins> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LukeKennedy.LSQL.Net.QueryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainJoins() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainJoins(DomainJoins other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DomainJoins Clone() {
      return new DomainJoins(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DomainJoins);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DomainJoins other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DomainJoins other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
