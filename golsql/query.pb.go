// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query.proto

package golsql

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Comparator int32

const (
	// Invalid, only used as a default in error states
	Comparator_UNKNOWN_COMPARATOR    Comparator = 0
	Comparator_EQUAL                 Comparator = 1
	Comparator_FUZZY_EQUAL           Comparator = 2
	Comparator_GREATER_THAN          Comparator = 3
	Comparator_LESS_THAN             Comparator = 4
	Comparator_GREATER_THAN_OR_EQUAL Comparator = 5
	Comparator_LESS_THAN_OR_EQUAL    Comparator = 6
	Comparator_IS_NULL               Comparator = 7
)

var Comparator_name = map[int32]string{
	0: "UNKNOWN_COMPARATOR",
	1: "EQUAL",
	2: "FUZZY_EQUAL",
	3: "GREATER_THAN",
	4: "LESS_THAN",
	5: "GREATER_THAN_OR_EQUAL",
	6: "LESS_THAN_OR_EQUAL",
	7: "IS_NULL",
}

var Comparator_value = map[string]int32{
	"UNKNOWN_COMPARATOR":    0,
	"EQUAL":                 1,
	"FUZZY_EQUAL":           2,
	"GREATER_THAN":          3,
	"LESS_THAN":             4,
	"GREATER_THAN_OR_EQUAL": 5,
	"LESS_THAN_OR_EQUAL":    6,
	"IS_NULL":               7,
}

func (x Comparator) String() string {
	return proto.EnumName(Comparator_name, int32(x))
}

func (Comparator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{0}
}

type GroupOperator int32

const (
	// Invalid, only used as a default in error states
	GroupOperator_UNKNOWN_GROUPOPERATOR GroupOperator = 0
	GroupOperator_AND                   GroupOperator = 1
	GroupOperator_OR                    GroupOperator = 2
	GroupOperator_XOR                   GroupOperator = 3
)

var GroupOperator_name = map[int32]string{
	0: "UNKNOWN_GROUPOPERATOR",
	1: "AND",
	2: "OR",
	3: "XOR",
}

var GroupOperator_value = map[string]int32{
	"UNKNOWN_GROUPOPERATOR": 0,
	"AND":                   1,
	"OR":                    2,
	"XOR":                   3,
}

func (x GroupOperator) String() string {
	return proto.EnumName(GroupOperator_name, int32(x))
}

func (GroupOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{1}
}

type Query struct {
	// A UUID generated for this query for idempotence and caching reasons, must be non-empty.
	// Repeated values may have their contents ignored by the server if it chooses to return cached content.
	// Servers must still correctly obey authC and authZ logic when choosing to return cached content based on ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to DomainSpace:
	//	*Query_Domain
	DomainSpace          isQuery_DomainSpace `protobuf_oneof:"domain_space"`
	Paging               *Paging             `protobuf:"bytes,2,opt,name=paging,proto3" json:"paging,omitempty"`
	Where                *WhereGroup         `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{0}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type isQuery_DomainSpace interface {
	isQuery_DomainSpace()
}

type Query_Domain struct {
	Domain string `protobuf:"bytes,101,opt,name=domain,proto3,oneof"`
}

func (*Query_Domain) isQuery_DomainSpace() {}

func (m *Query) GetDomainSpace() isQuery_DomainSpace {
	if m != nil {
		return m.DomainSpace
	}
	return nil
}

func (m *Query) GetDomain() string {
	if x, ok := m.GetDomainSpace().(*Query_Domain); ok {
		return x.Domain
	}
	return ""
}

func (m *Query) GetPaging() *Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

func (m *Query) GetWhere() *WhereGroup {
	if m != nil {
		return m.Where
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Query) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Query_Domain)(nil),
	}
}

type DomainJoins struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainJoins) Reset()         { *m = DomainJoins{} }
func (m *DomainJoins) String() string { return proto.CompactTextString(m) }
func (*DomainJoins) ProtoMessage()    {}
func (*DomainJoins) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{1}
}

func (m *DomainJoins) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainJoins.Unmarshal(m, b)
}
func (m *DomainJoins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainJoins.Marshal(b, m, deterministic)
}
func (m *DomainJoins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainJoins.Merge(m, src)
}
func (m *DomainJoins) XXX_Size() int {
	return xxx_messageInfo_DomainJoins.Size(m)
}
func (m *DomainJoins) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainJoins.DiscardUnknown(m)
}

var xxx_messageInfo_DomainJoins proto.InternalMessageInfo

type WhereGroup struct {
	Elements             []*WhereGroupElement `protobuf:"bytes,1,rep,name=elements,proto3" json:"elements,omitempty"`
	NegateOperator       bool                 `protobuf:"varint,2,opt,name=negate_operator,json=negateOperator,proto3" json:"negate_operator,omitempty"`
	Operator             GroupOperator        `protobuf:"varint,3,opt,name=operator,proto3,enum=GroupOperator" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WhereGroup) Reset()         { *m = WhereGroup{} }
func (m *WhereGroup) String() string { return proto.CompactTextString(m) }
func (*WhereGroup) ProtoMessage()    {}
func (*WhereGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{2}
}

func (m *WhereGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WhereGroup.Unmarshal(m, b)
}
func (m *WhereGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WhereGroup.Marshal(b, m, deterministic)
}
func (m *WhereGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhereGroup.Merge(m, src)
}
func (m *WhereGroup) XXX_Size() int {
	return xxx_messageInfo_WhereGroup.Size(m)
}
func (m *WhereGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_WhereGroup.DiscardUnknown(m)
}

var xxx_messageInfo_WhereGroup proto.InternalMessageInfo

func (m *WhereGroup) GetElements() []*WhereGroupElement {
	if m != nil {
		return m.Elements
	}
	return nil
}

func (m *WhereGroup) GetNegateOperator() bool {
	if m != nil {
		return m.NegateOperator
	}
	return false
}

func (m *WhereGroup) GetOperator() GroupOperator {
	if m != nil {
		return m.Operator
	}
	return GroupOperator_UNKNOWN_GROUPOPERATOR
}

type WhereGroupElement struct {
	// Types that are valid to be assigned to Element:
	//	*WhereGroupElement_Field
	//	*WhereGroupElement_Group
	Element              isWhereGroupElement_Element `protobuf_oneof:"element"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *WhereGroupElement) Reset()         { *m = WhereGroupElement{} }
func (m *WhereGroupElement) String() string { return proto.CompactTextString(m) }
func (*WhereGroupElement) ProtoMessage()    {}
func (*WhereGroupElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{3}
}

func (m *WhereGroupElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WhereGroupElement.Unmarshal(m, b)
}
func (m *WhereGroupElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WhereGroupElement.Marshal(b, m, deterministic)
}
func (m *WhereGroupElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhereGroupElement.Merge(m, src)
}
func (m *WhereGroupElement) XXX_Size() int {
	return xxx_messageInfo_WhereGroupElement.Size(m)
}
func (m *WhereGroupElement) XXX_DiscardUnknown() {
	xxx_messageInfo_WhereGroupElement.DiscardUnknown(m)
}

var xxx_messageInfo_WhereGroupElement proto.InternalMessageInfo

type isWhereGroupElement_Element interface {
	isWhereGroupElement_Element()
}

type WhereGroupElement_Field struct {
	Field *WhereField `protobuf:"bytes,101,opt,name=field,proto3,oneof"`
}

type WhereGroupElement_Group struct {
	Group *WhereGroup `protobuf:"bytes,102,opt,name=group,proto3,oneof"`
}

func (*WhereGroupElement_Field) isWhereGroupElement_Element() {}

func (*WhereGroupElement_Group) isWhereGroupElement_Element() {}

func (m *WhereGroupElement) GetElement() isWhereGroupElement_Element {
	if m != nil {
		return m.Element
	}
	return nil
}

func (m *WhereGroupElement) GetField() *WhereField {
	if x, ok := m.GetElement().(*WhereGroupElement_Field); ok {
		return x.Field
	}
	return nil
}

func (m *WhereGroupElement) GetGroup() *WhereGroup {
	if x, ok := m.GetElement().(*WhereGroupElement_Group); ok {
		return x.Group
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WhereGroupElement) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WhereGroupElement_Field)(nil),
		(*WhereGroupElement_Group)(nil),
	}
}

type WhereField struct {
	FieldName        string     `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	NegateComparator bool       `protobuf:"varint,2,opt,name=negate_comparator,json=negateComparator,proto3" json:"negate_comparator,omitempty"`
	Comparator       Comparator `protobuf:"varint,3,opt,name=comparator,proto3,enum=Comparator" json:"comparator,omitempty"`
	// DomainName is optional if only one domain is present, but mandatory if multiple domains are present
	DomainName string `protobuf:"bytes,4,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*WhereField_StringValue
	//	*WhereField_Int64Value
	//	*WhereField_Uint64Value
	//	*WhereField_DoubleValue
	//	*WhereField_BoolValue
	//	*WhereField_BytesValue
	Value isWhereField_Value `protobuf_oneof:"value"`
	// Ordering is optional, unless the RDBMS on the other end requires it,
	// but it is the responsibility of the server directly interfacing with the RDBMS to understand the requirements of its data source.
	Ordering             *Ordering `protobuf:"bytes,5,opt,name=ordering,proto3" json:"ordering,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *WhereField) Reset()         { *m = WhereField{} }
func (m *WhereField) String() string { return proto.CompactTextString(m) }
func (*WhereField) ProtoMessage()    {}
func (*WhereField) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{4}
}

func (m *WhereField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WhereField.Unmarshal(m, b)
}
func (m *WhereField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WhereField.Marshal(b, m, deterministic)
}
func (m *WhereField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WhereField.Merge(m, src)
}
func (m *WhereField) XXX_Size() int {
	return xxx_messageInfo_WhereField.Size(m)
}
func (m *WhereField) XXX_DiscardUnknown() {
	xxx_messageInfo_WhereField.DiscardUnknown(m)
}

var xxx_messageInfo_WhereField proto.InternalMessageInfo

func (m *WhereField) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

func (m *WhereField) GetNegateComparator() bool {
	if m != nil {
		return m.NegateComparator
	}
	return false
}

func (m *WhereField) GetComparator() Comparator {
	if m != nil {
		return m.Comparator
	}
	return Comparator_UNKNOWN_COMPARATOR
}

func (m *WhereField) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

type isWhereField_Value interface {
	isWhereField_Value()
}

type WhereField_StringValue struct {
	StringValue string `protobuf:"bytes,101,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type WhereField_Int64Value struct {
	Int64Value int64 `protobuf:"varint,102,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type WhereField_Uint64Value struct {
	Uint64Value uint64 `protobuf:"varint,103,opt,name=uint64_value,json=uint64Value,proto3,oneof"`
}

type WhereField_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,104,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type WhereField_BoolValue struct {
	BoolValue bool `protobuf:"varint,105,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type WhereField_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,106,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

func (*WhereField_StringValue) isWhereField_Value() {}

func (*WhereField_Int64Value) isWhereField_Value() {}

func (*WhereField_Uint64Value) isWhereField_Value() {}

func (*WhereField_DoubleValue) isWhereField_Value() {}

func (*WhereField_BoolValue) isWhereField_Value() {}

func (*WhereField_BytesValue) isWhereField_Value() {}

func (m *WhereField) GetValue() isWhereField_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *WhereField) GetStringValue() string {
	if x, ok := m.GetValue().(*WhereField_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *WhereField) GetInt64Value() int64 {
	if x, ok := m.GetValue().(*WhereField_Int64Value); ok {
		return x.Int64Value
	}
	return 0
}

func (m *WhereField) GetUint64Value() uint64 {
	if x, ok := m.GetValue().(*WhereField_Uint64Value); ok {
		return x.Uint64Value
	}
	return 0
}

func (m *WhereField) GetDoubleValue() float64 {
	if x, ok := m.GetValue().(*WhereField_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *WhereField) GetBoolValue() bool {
	if x, ok := m.GetValue().(*WhereField_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *WhereField) GetBytesValue() []byte {
	if x, ok := m.GetValue().(*WhereField_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (m *WhereField) GetOrdering() *Ordering {
	if m != nil {
		return m.Ordering
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WhereField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WhereField_StringValue)(nil),
		(*WhereField_Int64Value)(nil),
		(*WhereField_Uint64Value)(nil),
		(*WhereField_DoubleValue)(nil),
		(*WhereField_BoolValue)(nil),
		(*WhereField_BytesValue)(nil),
	}
}

type Paging struct {
	Limit                uint64   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Paging) Reset()         { *m = Paging{} }
func (m *Paging) String() string { return proto.CompactTextString(m) }
func (*Paging) ProtoMessage()    {}
func (*Paging) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{5}
}

func (m *Paging) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Paging.Unmarshal(m, b)
}
func (m *Paging) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Paging.Marshal(b, m, deterministic)
}
func (m *Paging) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Paging.Merge(m, src)
}
func (m *Paging) XXX_Size() int {
	return xxx_messageInfo_Paging.Size(m)
}
func (m *Paging) XXX_DiscardUnknown() {
	xxx_messageInfo_Paging.DiscardUnknown(m)
}

var xxx_messageInfo_Paging proto.InternalMessageInfo

func (m *Paging) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Paging) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type Ordering struct {
	// Priority must be set to a unique value if ordering is present for an item, duplicate priorities within a request is considered an error
	Priority             uint32   `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	Descending           bool     `protobuf:"varint,2,opt,name=descending,proto3" json:"descending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ordering) Reset()         { *m = Ordering{} }
func (m *Ordering) String() string { return proto.CompactTextString(m) }
func (*Ordering) ProtoMessage()    {}
func (*Ordering) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6ac9b241082464, []int{6}
}

func (m *Ordering) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ordering.Unmarshal(m, b)
}
func (m *Ordering) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ordering.Marshal(b, m, deterministic)
}
func (m *Ordering) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ordering.Merge(m, src)
}
func (m *Ordering) XXX_Size() int {
	return xxx_messageInfo_Ordering.Size(m)
}
func (m *Ordering) XXX_DiscardUnknown() {
	xxx_messageInfo_Ordering.DiscardUnknown(m)
}

var xxx_messageInfo_Ordering proto.InternalMessageInfo

func (m *Ordering) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Ordering) GetDescending() bool {
	if m != nil {
		return m.Descending
	}
	return false
}

func init() {
	proto.RegisterEnum("Comparator", Comparator_name, Comparator_value)
	proto.RegisterEnum("GroupOperator", GroupOperator_name, GroupOperator_value)
	proto.RegisterType((*Query)(nil), "Query")
	proto.RegisterType((*DomainJoins)(nil), "DomainJoins")
	proto.RegisterType((*WhereGroup)(nil), "WhereGroup")
	proto.RegisterType((*WhereGroupElement)(nil), "WhereGroupElement")
	proto.RegisterType((*WhereField)(nil), "WhereField")
	proto.RegisterType((*Paging)(nil), "Paging")
	proto.RegisterType((*Ordering)(nil), "Ordering")
}

func init() { proto.RegisterFile("query.proto", fileDescriptor_5c6ac9b241082464) }

var fileDescriptor_5c6ac9b241082464 = []byte{
	// 722 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x94, 0xdd, 0x6e, 0xda, 0x48,
	0x14, 0xc7, 0x31, 0x60, 0x3e, 0x8e, 0x81, 0x38, 0xa3, 0x6c, 0xe4, 0x5d, 0x69, 0x37, 0x84, 0x68,
	0xb5, 0x28, 0x91, 0x1c, 0x29, 0xbb, 0x8a, 0xb4, 0x97, 0x90, 0x90, 0xd0, 0x86, 0xda, 0x64, 0x08,
	0x4d, 0x9b, 0x1b, 0xcb, 0xe0, 0xc1, 0xb8, 0x31, 0x1e, 0xe2, 0x8f, 0x56, 0x3c, 0x40, 0x1f, 0xa0,
	0x8f, 0xd0, 0xdb, 0xaa, 0x0f, 0x59, 0xcd, 0x8c, 0x71, 0x1c, 0xe5, 0x0a, 0x9d, 0xff, 0xff, 0x37,
	0xe7, 0x63, 0x0e, 0x63, 0x50, 0x9e, 0x12, 0x12, 0x6e, 0xf4, 0x75, 0x48, 0x63, 0xda, 0xf9, 0x2a,
	0x81, 0x7c, 0xcb, 0x62, 0xd4, 0x82, 0xa2, 0xe7, 0x68, 0x52, 0x5b, 0xea, 0xd6, 0x71, 0xd1, 0x73,
	0x90, 0x06, 0x15, 0x87, 0xae, 0x6c, 0x2f, 0xd0, 0x08, 0xd3, 0x86, 0x05, 0x9c, 0xc6, 0xe8, 0x00,
	0x2a, 0x6b, 0xdb, 0xf5, 0x02, 0x57, 0x2b, 0xb6, 0xa5, 0xae, 0x72, 0x56, 0xd5, 0xc7, 0x3c, 0xc4,
	0xa9, 0x8c, 0x0e, 0x41, 0xfe, 0xb2, 0x24, 0x21, 0xd1, 0x4a, 0xdc, 0x57, 0xf4, 0x7b, 0x16, 0x5d,
	0x87, 0x34, 0x59, 0x63, 0xe1, 0xf4, 0x5b, 0xd0, 0x10, 0xd9, 0xac, 0x68, 0x6d, 0xcf, 0x49, 0xa7,
	0x09, 0xca, 0x25, 0x8f, 0xdf, 0x52, 0x2f, 0x88, 0x3a, 0xdf, 0x24, 0x80, 0xe7, 0x43, 0x48, 0x87,
	0x1a, 0xf1, 0xc9, 0x8a, 0x04, 0x71, 0xa4, 0x49, 0xed, 0x52, 0x57, 0x39, 0x43, 0xb9, 0x9c, 0x03,
	0x61, 0xe1, 0x8c, 0x41, 0xff, 0xc0, 0x4e, 0x40, 0x5c, 0x3b, 0x26, 0x16, 0x5d, 0x93, 0xd0, 0x8e,
	0x69, 0xc8, 0x5b, 0xad, 0xe1, 0x96, 0x90, 0xcd, 0x54, 0x45, 0xc7, 0x50, 0xcb, 0x08, 0xd6, 0x6c,
	0xeb, 0xac, 0xa5, 0xf3, 0x9c, 0x5b, 0x02, 0x67, 0x7e, 0x67, 0x09, 0xbb, 0xaf, 0x6a, 0xa2, 0x23,
	0x90, 0x17, 0x1e, 0xf1, 0x1d, 0x7e, 0x49, 0xd9, 0xa8, 0x57, 0x4c, 0x1a, 0x16, 0xb0, 0xf0, 0x18,
	0xe4, 0xb2, 0x43, 0xda, 0xe2, 0xd5, 0x7d, 0x30, 0x88, 0x7b, 0xfd, 0x3a, 0x54, 0xd3, 0xfe, 0x3b,
	0x3f, 0x4b, 0xe9, 0xf4, 0x3c, 0x0f, 0xfa, 0x13, 0x80, 0xe7, 0xb1, 0x02, 0x7b, 0x45, 0xd2, 0x0d,
	0xd5, 0xb9, 0x62, 0xd8, 0x2b, 0x82, 0x4e, 0x60, 0x37, 0x1d, 0x76, 0x4e, 0x57, 0x6b, 0x3b, 0x3f,
	0xae, 0x2a, 0x8c, 0x8b, 0x4c, 0x47, 0x27, 0x00, 0x39, 0x4a, 0x8c, 0xac, 0xe8, 0xcf, 0x00, 0xce,
	0xd9, 0xe8, 0x00, 0x94, 0x74, 0x49, 0xbc, 0x72, 0x99, 0x57, 0x06, 0x21, 0xf1, 0xd2, 0x47, 0xd0,
	0x88, 0xe2, 0xd0, 0x0b, 0x5c, 0xeb, 0xb3, 0xed, 0x27, 0x24, 0xfb, 0xa7, 0x28, 0x42, 0x7d, 0xcf,
	0x44, 0x74, 0x08, 0x8a, 0x17, 0xc4, 0xe7, 0xff, 0xa5, 0x0c, 0xbb, 0x83, 0xd2, 0xb0, 0x80, 0x81,
	0x8b, 0x02, 0x39, 0x82, 0x46, 0x92, 0x67, 0xdc, 0xb6, 0xd4, 0x2d, 0xb3, 0x3c, 0xc9, 0x4b, 0xc8,
	0xa1, 0xc9, 0xcc, 0x27, 0x29, 0xb4, 0x6c, 0x4b, 0x5d, 0x89, 0x41, 0x42, 0x15, 0xd0, 0x01, 0xc0,
	0x8c, 0x52, 0x3f, 0x45, 0x3c, 0x76, 0x0b, 0xc3, 0x02, 0xae, 0x33, 0x2d, 0xeb, 0x66, 0xb6, 0x89,
	0x49, 0x94, 0x12, 0x9f, 0xda, 0x52, 0xb7, 0xc1, 0xba, 0xe1, 0xa2, 0x40, 0xfe, 0x86, 0x1a, 0x0d,
	0x1d, 0xc2, 0x26, 0xd0, 0x64, 0xbe, 0xb1, 0xba, 0x6e, 0xa6, 0x02, 0xce, 0xac, 0x7e, 0x15, 0x64,
	0x9e, 0xa3, 0x73, 0x0e, 0x15, 0xf1, 0x00, 0xd0, 0x1e, 0xc8, 0xbe, 0xb7, 0xf2, 0x62, 0xbe, 0xa4,
	0x32, 0x16, 0x01, 0xda, 0x87, 0x0a, 0x5d, 0x2c, 0x22, 0x12, 0xf3, 0xad, 0x94, 0x71, 0x1a, 0x75,
	0xae, 0xa0, 0xb6, 0x4d, 0x8b, 0xfe, 0x80, 0xda, 0x3a, 0xf4, 0x68, 0xe8, 0xc5, 0x1b, 0x7e, 0xb8,
	0x89, 0xb3, 0x18, 0xfd, 0x05, 0xe0, 0x90, 0x68, 0x4e, 0x02, 0x67, 0xfb, 0xe6, 0x6a, 0x38, 0xa7,
	0x1c, 0x7f, 0x97, 0x00, 0x72, 0x2b, 0xde, 0x07, 0x34, 0x35, 0x6e, 0x0c, 0xf3, 0xde, 0xb0, 0x2e,
	0xcc, 0x77, 0xe3, 0x1e, 0xee, 0xdd, 0x99, 0x58, 0x2d, 0xa0, 0x3a, 0xc8, 0x83, 0xdb, 0x69, 0x6f,
	0xa4, 0x4a, 0x68, 0x07, 0x94, 0xab, 0xe9, 0xc3, 0xc3, 0x47, 0x4b, 0x08, 0x45, 0xa4, 0x42, 0xe3,
	0x1a, 0x0f, 0x7a, 0x77, 0x03, 0x6c, 0xdd, 0x0d, 0x7b, 0x86, 0x5a, 0x42, 0x4d, 0xa8, 0x8f, 0x06,
	0x93, 0x89, 0x08, 0xcb, 0xe8, 0x77, 0xf8, 0x2d, 0x0f, 0x58, 0x26, 0x4e, 0xcf, 0xca, 0xac, 0x5e,
	0x46, 0x3e, 0xeb, 0x15, 0xa4, 0x40, 0xf5, 0xcd, 0xc4, 0x32, 0xa6, 0xa3, 0x91, 0x5a, 0x3d, 0xbe,
	0x84, 0xe6, 0x8b, 0x77, 0xc5, 0x12, 0x6e, 0xbb, 0xbc, 0xc6, 0xe6, 0x74, 0x6c, 0x8e, 0x07, 0xdb,
	0x46, 0xab, 0x50, 0xea, 0x19, 0x97, 0xaa, 0x84, 0x2a, 0x50, 0x34, 0xb1, 0x5a, 0x64, 0xc2, 0x07,
	0x13, 0xab, 0xa5, 0xfe, 0xff, 0x0f, 0x6d, 0xd7, 0x8b, 0x97, 0xc9, 0x4c, 0x9f, 0xd3, 0xd5, 0xa9,
	0xef, 0x3f, 0x92, 0x20, 0x20, 0xce, 0xe6, 0xd4, 0x8f, 0x9e, 0xfc, 0x53, 0x97, 0xb2, 0x9f, 0x1f,
	0xc5, 0xbd, 0x51, 0xf2, 0x48, 0x6e, 0x84, 0xa3, 0x8f, 0x26, 0xb7, 0x23, 0xdd, 0x20, 0xf1, 0xac,
	0xc2, 0xbf, 0x77, 0xff, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xf0, 0xaf, 0x1f, 0xfe, 0x04,
	0x00, 0x00,
}
